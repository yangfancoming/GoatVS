<?xml version="1.0" encoding="utf-8" ?>
<configuration>

    <configSections>
        <sectionGroup name="common">
            <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging" />
        </sectionGroup>
        <sectionGroup name="spring">
            <section name="context" type="Spring.Context.Support.ContextHandler, Spring.Core"/>
            <section name="objects" type="Spring.Context.Support.DefaultSectionHandler, Spring.Core" />
        </sectionGroup>
        <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net" />
    </configSections>


    <common>
        <logging>
            <factoryAdapter type="Common.Logging.Log4Net.Log4NetLoggerFactoryAdapter, Common.Logging.Log4Net1215">
                <!-- choices are INLINE, FILE, FILE-WATCH, EXTERNAL-->
                <!-- otherwise BasicConfigurer.Configure is used   -->
                <!-- log4net configuration file is specified with key configFile-->
                <arg key="configType" value="INLINE" />
            </factoryAdapter>
        </logging>
    </common>



    <spring>

        <context>
            <!-- 使用内嵌的spring.xml 配置方式 对应 AppContext.xml 文件 -->
            <!-- <resource uri="assembly://Spring.IocQuickStart.MovieFinder/Spring.IocQuickStart.MovieFinder/AppContext.xml"/> -->



            <!-- using section in App.config -->
            <resource uri="config://spring/objects"/>

        </context>

        <objects xmlns="http://www.springframework.net" >
            <description>An example that demonstrates simple IoC features.</description>

            <object id="MyMovieLister" type="chapter4_3_2.MovieFinder.MovieLister, chapter4_3_2">
                <!-- 指定实现类 ColonDelimitedMovieFinder   using Constructor Injection-->
                <!-- <property name="MovieFinder" ref="AnotherMovieFinder"/> -->
                <!-- 指定实现类 SimpleMovieFinder    using setter injection... -->
                <property name="MovieFinder" ref="MyMovieFinder"/>
            </object>

            <!-- An IMovieFinder implementation that uses a text file as it's movie source...     -->
            <object id="AnotherMovieFinder" type="chapter4_3_2.MovieFinder.Impl.ColonDelimitedMovieFinder, chapter4_3_2">
                <constructor-arg index="0" value="movies.txt"/>
            </object>

            <!-- An IMovieFinder implementation that uses harcoded values as it's movie source... -->
            <object id="MyMovieFinder" type="chapter4_3_2.MovieFinder.Impl.SimpleMovieFinder, chapter4_3_2"/>


            <object type="Spring.Objects.Factory.Attributes.RequiredAttributeObjectPostProcessor, Spring.Core"/>
        </objects>

    </spring>

    <log4net>
        <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
            <layout type="log4net.Layout.PatternLayout">
                <conversionPattern value="%-5level - %message%newline" />
            </layout>
        </appender>

        <!-- Set default logging level to DEBUG -->
        <root>
            <level value="DEBUG" />
            <appender-ref ref="ConsoleAppender" />
        </root>

        <!-- Set logging for MovieFinder to DEBUG -->
        <logger name="Spring.IocQuickStart.MovieFinder">
            <level value="DEBUG" />
        </logger>

        <!-- Set logging for Spring to INFO.
             Logger names in Spring correspond to the namespace -->
        <logger name="Spring">
            <level value="DEBUG" />
        </logger>

    </log4net>

    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.2" />
    </startup>
</configuration>